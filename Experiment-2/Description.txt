Diving into the Admin Dashboard's Code
Let's break down the code for this Admin Dashboard—it's a great example of how HTML and CSS work together 
to build a professional, dynamic webpage.

The HTML: The Skeleton of the Dashboard
Think of the HTML as the bones of our dashboard. It sets up the basic structure and content, organizing 
everything into logical sections.

The Head Section: This part isn't visible on the page, but it's crucial. It tells the browser important things 
like the page's title (<title>Admin Dashboard</title>) and how to handle different screen sizes 
(<meta name="viewport" ...>). Most importantly, it links to our CSS file, which is where all the styling magic 
happens.

The Body: This is where all the visible stuff lives. The entire dashboard is wrapped in a main div 
that uses a CSS Grid to create a clean, three-row, two-column layout.

Theme Switcher: This is a clever little trick. The code uses a hidden <input type="checkbox"> that you never 
actually see. The "DARK THEME" <label> is what you click. When you click it, the checkbox's state changes, and the 
CSS uses that change to flip the theme.

The Sections: The layout is split into clear, semantic sections:
The <header> at the top holds the title and the theme button.
The <nav> on the left is our sidebar with navigation links.
The <main> section in the middle is the star of the show—it's the big space
for all the important dashboard content.
The <footer> at the bottom holds the copyright info.

The CSS: The Style and Personality
The CSS file is where we give our dashboard its look and feel. It takes the HTML structure and makes it visually 
appealing and interactive.

CSS Variables: This is a modern and powerful technique. The code defines custom properties, or variables, like 
--bg-header and --bg-footer at the very top. This is genius for theme switching because instead of changing every 
single color manually, we just update the variable values.

Grid and Flexbox: The layout relies on two powerful CSS tools:

Grid organizes the main div into rows and columns, creating a solid, predictable structure.
Flexbox is used inside the header and footer to perfectly align items, like centering text or placing elements 
on opposite sides.

The Magic of the Theme Switch: This is where the code really shines. The rule input:checked ~ div is the key.
It says, "Hey, if the hidden checkbox is checked, find the main div container and all its children and apply 
these new styles." This instantly updates the colors to the dark theme variables and changes the text color to 
white, all without needing any JavaScript.

So, in a nutshell, the HTML provides the clean, logical structure, and the CSS brings it to life with a smart,
efficient dark theme toggle. It's a great example of building a robust dashboard with a simple, elegant approach.